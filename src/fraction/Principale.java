package fraction;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class Principale {

	public static void main(String[] args) {
		
		
		/////////////////////////////////////////////////////////////////////////////////
		// Démo Onglet Variables
		///////////////////////////////////////////////////////////////////////////////
		Note n1, n2, n3, n4, n5, n6, n7, n8, n9, n10;
		List<Note> notes = new ArrayList<>();
		
		try {
			n1 = new Note(0);
			n2 = new Note(2);
			n3 = new Note(4);
			n4 = new Note(6);
			n5 = new Note(8);
			n6 = new Note(10);
			n7 = new Note(12);
			n8 = new Note(14);
			n9 = new Note(16);
			n10 = new Note(18);
			
			notes.add(n1);
			notes.add(n2);
			notes.add(n3);
			notes.add(n4);
			notes.add(n5);
			notes.add(n6);
			notes.add(n7);
			notes.add(n8);
			notes.add(n9);
			notes.add(n10);
			
		} catch (NoteNegativeExeption e) {
			e.printStackTrace();
		}
		
		Stagiaire stephan = new Stagiaire("StephanE", "Charlotte aux Fraysse", new Date(), notes);
		
		Fraction.PGCD(15, 28);
		
		///////////////////////////////////////////////////////////////////////////////////
		// Démo Points d'arrêt
		//////////////////////////////////////////////////////////////////////////////////
		// Nombre d'accès
		/////////////////////////////////////////////////////////////////////////////////
		
		for (int i = 0; i < notes.size(); i++)
		{
			//System.out.println(notes.get(i));
		}
		
		/////////////////////////////////////////////////////////////////////////////////
		// Conditions d'arrêt - Type When true
		//////////////////////////////////////////////////////////////////////////////
		
		
		stephan.getNom();
		
		//////////////////////////////////////////////////////////////////////////////////
		//Condition d'arrêt - Type When value changes
		//////////////////////////////////////////////////////////////////////////////////

		for (int i = 0; i < notes.size(); i++)
		{
			if (notes.get(i).getNumerateur() < 10){
				//System.out.println("T'es nul va bosser");
			}else{
				//System.out.println("Tu vois t'es pas si con");
			}
		}
		
		///////////////////////////////////////////////////////////////////////////////////////////
		// Point d'arrêt - Type Exception
		//////////////////////////////////////////////////////////////////////////////////////////
		
		Fraction f = new Fraction(10, 15);
		
		/*try{
			f = new Fraction (32, 0);
		}catch (ArithmeticException e) {
			// TODO: handle exception
		}*/
		
		//System.out.println(f);
		
		//f = new Fraction (32, 0);
		
		/////////////////////////////////////////////////////////////////////////////////////////
		// Expressions
		/////////////////////////////////////////////////////////////////////////////////////////
		
		Fraction moyenne = stephan.moyenne();
		int numérateurMoyenne = moyenne.getNumerateur();
		
		System.out.println(numérateurMoyenne);
		
		////////////////////////////////////////////////////////////////////////////////////////
		// Change Value
		////////////////////////////////////////////////////////////////////////////////////////
		
		numérateurMoyenne = 0;
		
		System.out.println(numérateurMoyenne);
		
		System.out.println(stephan.getNotes());
		
		///////////////////////////////////////////////////////////////////////////////////////
		// WatchPoints - Voir classe Fraction
		//////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////
		// Evaluating expressions - voir onglet Display
		//////////////////////////////////////////////////////////////////////////////////////
		
	}

}
